编译出一个ubuntu kernel+uboot+root file system for beaglebone
https://eewiki.net/display/linuxonarm/BeagleBone+Black

1. Download/Extract:
~/
wget -c https://releases.linaro.org/14.09/components/toolchain/binaries/gcc-linaro-arm-linux-gnueabihf-4.9-2014.09_linux.tar.xz
tar xf gcc-linaro-arm-linux-gnueabihf-4.9-2014.09_linux.tar.xz
export CC=`pwd`/gcc-linaro-arm-linux-gnueabihf-4.9-2014.09_linux/bin/arm-linux-gnueabihf-


Test: If this test fails, verify that you have the 32bit libraries installed on your development system.
~/
${CC}gcc --version
arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.9-2014.09 - Linaro GCC 4.9-2014.09) 4.9.2 20140904 (prerelease)
Copyright (C) 2014 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

2. Bootloader: U-Boot
Das U-Boot -- the Universal Boot Loader http://www.denx.de/wiki/U-Boot
Download:
~/
git clone git://git.denx.de/u-boot.git
cd u-boot/
git checkout v2015.01 -b tmp


Patches:
~/u-boot
wget -c https://raw.githubusercontent.com/eewiki/u-boot-patches/master/v2015.01/0001-am335x_evm-uEnv.txt-bootz-n-fixes.patch
 
patch -p1 < 0001-am335x_evm-uEnv.txt-bootz-n-fixes.patch


Configure and Build:
~/u-boot
make ARCH=arm CROSS_COMPILE=${CC} distclean
make ARCH=arm CROSS_COMPILE=${CC} am335x_evm_defconfig
make ARCH=arm CROSS_COMPILE=${CC}


3. Upgrade distro "device-tree-compiler" package
~/
wget -c https://raw.github.com/RobertCNelson/tools/master/pkgs/dtc.sh
chmod +x dtc.sh
./dtc.sh


4. Linux Kernel
This script will build the kernel and modules and copy them to the deploy directory.
Mainline
Download:
~/
git clone https://github.com/RobertCNelson/bb-kernel.git
cd bb-kernel/
Checkout v3.8.x branch (full cape support):
~/bb-kernel
git checkout origin/am33x-v3.8 -b tmp


Build:
~/bb-kernel
./build_kernel.sh

5. Root File System
Ubuntu 14.04.1
User
Password
ubuntu
temppwd

Download:
~/
wget -c https://rcn-ee.net/rootfs/eewiki/minfs/ubuntu-14.04.1-minimal-armhf-2015-01-20.tar.xz
Verify:
~/
md5sum ubuntu-14.04.1-minimal-armhf-2015-01-20.tar.xz
fc71da62babe15e45c7e51f8dba22639  ubuntu-14.04.1-minimal-armhf-2015-01-20.tar.xz
Extract:
~/
tar xf ubuntu-14.04.1-minimal-armhf-2015-01-20.tar.xz

6. Setup microSD/SD card
For these instruction, we are assuming: DISK=/dev/mmcblk0, "lsblk" is very useful for determining the device id.

export DISK=/dev/mmcblk0   or export DISK=/dev/sdc
Erase microSD/SD card:
sudo dd if=/dev/zero of=${DISK} bs=1M count=10
Install Bootloader:
~/
sudo dd if=./u-boot/MLO of=${DISK} count=1 seek=1 conv=notrunc bs=128k
sudo dd if=./u-boot/u-boot.img of=${DISK} count=2 seek=1 conv=notrunc bs=384k
Create Partition Layout:
sudo sfdisk --in-order --Linux --unit M ${DISK} <<-__EOF__
1,,0x83,*
__EOF__
Format Partitions:
for: DISK=/dev/mmcblk0
sudo mkfs.ext4 ${DISK}p1 -L rootfs
 
for: DISK=/dev/sdX
sudo mkfs.ext4 ${DISK}1 -L rootfs
Mount Partitions:
On some systems, these partitions may be auto-mounted...
sudo mkdir -p /media/rootfs/
 
for: DISK=/dev/mmcblk0
sudo mount ${DISK}p1 /media/rootfs/
 
for: DISK=/dev/sdX
sudo mount ${DISK}1 /media/rootfs/

7. Install Kernel and Root File System
To help new users, since the kernel version can change on a daily basis. The kernel building scripts listed on this page will now give you a hint of what kernel version was built.
-----------------------------
Script Complete
eewiki.net: [user@localhost:~$ export kernel_version=3.X.Y-Z]
-----------------------------
Copy and paste that "export kernel_version=3.X.Y-Z" exactly as shown in your own build/desktop environment and hit enter to create an environment variable to be used later. 

export kernel_version=3.X.Y-Z 这里是export kernel_version=3.8.13-bone70.5
Copy Root File System
~/
sudo tar xfvp ./*-*-*-armhf-*/armhf-rootfs-*.tar -C /media/rootfs/
Create /boot/uEnv.txt
~/
sudo sh -c "echo 'uname_r=${kernel_version}' > /media/rootfs/boot/uEnv.txt"

8. Copy Kernel Files
Kernel Image:
~/
mainline:
sudo cp -v ./bb-kernel/deploy/${kernel_version}.zImage /media/rootfs/boot/vmlinuz-${kernel_version}
 

Kernel Device Tree Binaries:
~/
sudo mkdir -p /media/rootfs/boot/dtbs/${kernel_version}/
 
mainline:
sudo tar xfv ./bb-kernel/deploy/${kernel_version}-dtbs.tar.gz -C /media/rootfs/boot/dtbs/${kernel_version}/
 

Kernel Modules:
~/
mainline:
sudo tar xfv ./bb-kernel/deploy/${kernel_version}-modules.tar.gz -C /media/rootfs/
 

9. File Systems Table (/etc/fstab)
/etc/fstab
sudo sh -c "echo '/dev/mmcblk0p1  /  auto  errors=remount-ro  0  1' >> /media/rootfs/etc/fstab"
注意这里不能写 /dev/sdc1 一定要写/dev/mmcblk0p1




